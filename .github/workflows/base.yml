name: Docker Build

on:
  workflow_call:
    inputs:
      dockerfile:
        required: true
        type: string        
      base_image_name:
        required: true
        type: string
      base_image_tag:
        required: true
        type: string
      release_image_name:
        required: true
        type: string
    secrets:
      DOCKER_PASSWORD:
        required: true

env:
  REGISTRY: docker.io
  RELEASE_IMAGE_NAME: ${{ inputs.release_image_name }}
  BASE_IMAGE_NAME: ${{ inputs.base_image_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
      with:
        cosign-release: 'v2.2.4'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
      with:
        platforms: linux/amd64,linux/arm64

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ env.REGISTRY }}
        username: kit101z
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
      with:
        images: ${{ env.REGISTRY }}/${{ env.RELEASE_IMAGE_NAME }}
        flavor: |
          latest=false
        tags: |
          type=raw,value=${{ inputs.base_image_tag }}-${{ github.sha }},enable={{is_default_branch}}
          type=raw,value=${{ inputs.base_image_tag }},enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        build-args: |
          BASE_IMAGE_NAME=${{ env.BASE_IMAGE_NAME }}
          BASE_IMAGE_TAG=${{ inputs.base_image_tag }}

    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        TAGS: ${{ steps.meta.outputs.tags }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST} 